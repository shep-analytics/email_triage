#!/usr/bin/env bash
# Check Google OAuth consent screen configuration
# This will help identify if the issue is related to unverified consent screen

set -euo pipefail

PROJECT_ID="inboximp-email-triage"
CLIENT_ID="561574736348-op1pild9jpibin19f1ct8pqpe05f3r0p.apps.googleusercontent.com"

echo "======================================================================"
echo "GOOGLE OAUTH CONSENT SCREEN STATUS CHECK"
echo "======================================================================"
echo ""
echo "Project: ${PROJECT_ID}"
echo "OAuth Client ID: ${CLIENT_ID}"
echo ""

# Check if gcloud is authenticated
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" > /dev/null 2>&1; then
    echo "ERROR: Not authenticated with gcloud"
    echo "Run: gcloud auth login"
    exit 1
fi

echo "----------------------------------------------------------------------"
echo "1. OAuth Consent Screen Configuration"
echo "----------------------------------------------------------------------"
echo ""
echo "Opening Google Cloud Console OAuth consent screen page..."
echo ""
echo "URL: https://console.cloud.google.com/apis/credentials/consent?project=${PROJECT_ID}"
echo ""
echo "Please check the following:"
echo ""
echo "☐ Publishing Status:"
echo "   • Testing - Only test users can use the app"
echo "   • In production - Anyone can use BUT restricted scopes need verification"
echo ""
echo "☐ Test Users (if status is 'Testing'):"
echo "   • Is alexsheppert@gmail.com listed as a test user?"
echo "   • If NOT, click 'Add Users' and add: alexsheppert@gmail.com"
echo ""
echo "☐ Scopes:"
echo "   • Should include: https://www.googleapis.com/auth/gmail.modify"
echo "   • Should include: https://www.googleapis.com/auth/gmail.readonly"
echo "   • Should include: https://www.googleapis.com/auth/gmail.metadata"
echo ""
echo "----------------------------------------------------------------------"
echo "2. Verification Status"
echo "----------------------------------------------------------------------"
echo ""
echo "URL: https://console.cloud.google.com/apis/credentials/consent?project=${PROJECT_ID}"
echo ""
echo "Gmail scopes (gmail.modify, gmail.readonly) are RESTRICTED by Google."
echo "This means:"
echo ""
echo "IF your app is 'In production' WITHOUT verification:"
echo "  ✗ Google limits access to restricted scopes"
echo "  ✗ Even if user grants permission, API calls may be blocked"
echo "  ✗ Users see warnings about unverified app"
echo ""
echo "IF your app is 'Testing' mode:"
echo "  ✓ Unrestricted access for test users ONLY"
echo "  ✓ Test users can grant and use all scopes"
echo "  ✗ Non-test users cannot use the app at all"
echo ""
echo "SOLUTION OPTIONS:"
echo ""
echo "Option A: Use Testing Mode + Add Test Users (Quick)"
echo "  1. Keep OAuth consent screen in 'Testing' mode"
echo "  2. Add alexsheppert@gmail.com as a test user"
echo "  3. Re-authenticate via the web OAuth flow"
echo "  → Works immediately, but only for test users"
echo ""
echo "Option B: Complete OAuth Verification (Long-term)"
echo "  1. Submit app for OAuth verification"
echo "  2. Complete Google's review process (weeks)"
echo "  3. Get approved for restricted scopes"
echo "  → Allows any user to use the app"
echo ""
echo "Option C: Use Service Account with Domain-Wide Delegation (Workspace only)"
echo "  1. Create service account"
echo "  2. Configure Domain-Wide Delegation in Workspace admin"
echo "  3. Set GMAIL_SERVICE_ACCOUNT_FILE in config"
echo "  → Bypasses OAuth consent, but requires Google Workspace"
echo ""
echo "----------------------------------------------------------------------"
echo "3. Quick Check: Are you a test user?"
echo "----------------------------------------------------------------------"
echo ""

# Try to check OAuth consent screen config via API
echo "Attempting to fetch OAuth consent screen configuration..."
echo ""

# Note: This requires appropriate permissions
if gcloud alpha iap oauth-brands list --project="${PROJECT_ID}" 2>/dev/null | grep -q "name"; then
    echo "OAuth brand exists for project"
    gcloud alpha iap oauth-brands list --project="${PROJECT_ID}" 2>/dev/null || echo "Could not list brands"
else
    echo "Could not access OAuth brand configuration via API"
    echo "Please check manually in the Cloud Console"
fi

echo ""
echo "----------------------------------------------------------------------"
echo "RECOMMENDED NEXT STEPS"
echo "----------------------------------------------------------------------"
echo ""
echo "1. Go to OAuth consent screen in Cloud Console (link above)"
echo "2. If status is 'Testing':"
echo "   - Click 'Test users'"
echo "   - Click 'Add users'"
echo "   - Add: alexsheppert@gmail.com"
echo "   - Save"
echo ""
echo "3. If you just added yourself as a test user:"
echo "   - Go to https://myaccount.google.com/permissions"
echo "   - Remove access for 'Inboximp Email Triage'"
echo "   - Go back to http://localhost:8000"
echo "   - Click 'Connect Gmail' and re-authenticate"
echo "   - This time the full scopes should work!"
echo ""
echo "4. Verify the fix:"
echo "   - Try clicking 'View' on an email"
echo "   - Should now show full email content!"
echo ""
echo "======================================================================"
