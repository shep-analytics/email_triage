"""
Centralised configuration for the email triage service.

Populate these values instead of exporting environment variables.
"""

# Gmail configuration -------------------------------------------------------

# List the Gmail inboxes you want to monitor.
GMAIL_ACCOUNTS = [
    "alexsheppert@gmail.com",
    # Add more accounts here.
]

# Path to the OAuth client secret JSON. The bootstrap script auto-detects
# client_secret_desktop.json, but you can override it here if needed.
GMAIL_CLIENT_SECRET_PATH = "client_secret_desktop.json"

# Directory containing the per-account token JSON files generated by
# bootstrap_gmail_token.py.
GMAIL_OAUTH_TOKEN_DIR = ".gmail_tokens"

# Pub/Sub topic used for Gmail push notifications.
GMAIL_TOPIC_NAME = "projects/email-assistant-475201/topics/email-triage"

# Optional: override the delegated user when using a service account.
GMAIL_DELEGATED_USER = None

# Optional: service account JSON for domain-wide delegation.
GMAIL_SERVICE_ACCOUNT_FILE = None

# Optional: custom classification prompt path.
CLASSIFICATION_PROMPT_PATH = "classification_prompt.txt"


# Supabase configuration ----------------------------------------------------

# Set these once your Supabase project is ready.
SUPABASE_URL = None  # Read from env SUPABASE_URL
SUPABASE_SERVICE_ROLE_KEY = None  # Read from env SUPABASE_SERVICE_ROLE_KEY

# Optional: anon key if you need client-side access later.
SUPABASE_ANON_KEY = None  # Optional, read from env SUPABASE_ANON_KEY


# Telegram configuration ----------------------------------------------------
# Leave these as None to fall back to keys.py or environment variables.
TELEGRAM_BOT_TOKEN = None  # Prefer env TELEGRAM_BOT_TOKEN
TELEGRAM_CHAT_ID = None    # Prefer env TELEGRAM_CHAT_ID
